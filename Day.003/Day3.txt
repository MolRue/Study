::<object></object>::
: 오디오, 비디오, PDF, 자바 애플릿 등, 다양한 멀티미디어 파일 삽입
: 오디오나 비디오 에는 기존 audio , video 를 주로사용

::<embed>::
: 역사가 오래된 태그
: object 태그와 마찬가지로 멀티미디어 파일을 넣을수 있다! (오디오,이미지,비디오)
: 역시 동일한 기능을 하는 태그가 있으므로 자주사용하진 않는다?

::<a></a>::
: 앵커 요소
: herf 속성을 추가해 위치나 파일, 이메일주소 그외 다른 url과 연결할수 있는 하이퍼 링크 생성.
: target >> a 요소에서 연결된 문서 위치를 지정할수 있는 속성.
<a herf="url주소" target="_blank"> >>새창에서 열기?
: _blank : 이 내용을 새창에서 열기
: _self : 클릭된 동일 프레임 내에서 문서 열기
: _parent : url을 부모프레임 에서 연다..? (잘안씀)
: _top : url을 최상단 브라우징에 표시 (잘안씀)
: frame 태그는 HTML4 에서 프레임이 따로 사용 되었었다. 다만 HTML5 에서는 안쓰인다는데?
: iframe 태그로 대신 쓴다는데 별로 안중요하다 하시넴.
: framename :

---- 여기까지 기본태그----

1. 기본태그
2. 폼태그
3. 시멘틱 태그


1번문제 조건 
1. 제목은 가장 큰 제목부터 단계별로 작아지는 태그를 사용 >> h1, h2
2. 텍스트 단락에 줄바꿈이 있음 >> br
3. 목록부분은 순서없는 목록으로 작성 >> ul
4. 목록 내용중 굵게 표시한 부분과 이탤릭체로 표시한 부분은 중요하지 않지만 다른 텍스트와 구별하기 위한것 >> b, i, li
5. '혜택' 내용은 '순서있는 목록'으로 사용하되, 알파벳 소문자를 사용 >> ol type="a"
6. 문서 마지막에는 images\mic.jpg사용 >> img

2번문제 조건
1. 4행3열의 표  >> table
2. 1~3행의 첫번째 열은 병합 >> rowspan
3. 4행의 2열과 3열 병합  >> rowspan
4. 화면에 내용이 있는 부분은 제목셀로 지정  >> h1???


>>>폼 태그

: 회원가입 같은 곳에 많이 쓰임.
: 폼 태그 안에 입력박스를 배치하는 방식

::<fieldset></fieldset>::
: 필드를 만들어 준다??
::<legend></legend>::
: 필드셋 안에 내용을 넣어줄수 있다.

::<label></label>::
: for라는 속성이 항상 따라온다??
: 뒤에 input 속성 같은 태그를 연결해주는 개념.
ex) <label for="user-id">아이디(6자 이상)</label>
     <input type="text" id="user-id">
: label 태그로 묶인 버튼과 텍스트는 하나가 된다? 안해도 티는 안나지만 해두면 클릭영역이 넓어진다.

::<input></input>:: 
: 입력 요소
: input태그는 항상 form태그 안에 있어야 한다.
: 필드에 내용을 입력 할수 있게 해주는 태그
: input 요소에는 다양한 입력 유형이(type)있다. (유형 미 지정시, 기본값은 text)
: 많이 쓰이는 input 입력유형
- file
- password
- radio > 선택지? 하나만 선택 가능해! 라디오 딸깍딸깍
- checkbox > 선택지? 중복선택이 가능하다! (checked 속성 추가시, 디폴트값은 체크되서 나옴)
- reset
- submit >전송을 하는 역할. input 데이터를 지정된 곳으로 전송. server , java 도구? value <글자?
- text  (maxlength = 최대 글자 갯수 , minlength = 최소 글자 갯수)
 
>>size >> input 요소 칸의 크기를 지정할수 있음 (CSS에서도 할수 있다구?)
>>input 태그에서 입력요소에 뭐...예를들면 이메일 입력란에 type를 text로 써도 되긴 되는데?? 
   구분해두는게 코딩하기 편하니 email로 표기하기도 한다.

::<name : "">::
: 네임속성
: 보통은 id 속성과 똑같이 쓰는편
: input태그는 어딘가로 입력된 데이터를 보내는 역할. 이 데이터가 어떤 데이터인지 구분이 필요하므로 name을 지정해야됭!
: !!!! radio 속성은 원래 하나만 선택 가능한데요? 같은 그룹 안에서 name이 다르면 중복이 되버린다??
: 즉 같은 그룹에 있으면 name이 같아야 합니다.
: 의도적으로 radio를 중복선택이 가능하게 할 경우엔 name을 다르게 할...순있지만 그럴거면 check box를 쓰겠지? (check box는 취소라도 되니깐)

: <input type="text" id="user-id">
: id >> 각각의 태그에 고유한 id를 지정.
 >> 시작은 소문자.
 >> 의미가 있는걸로 지정.
 >> 문서 전체에서 유일한 고유식별자를 정의한다! 
 ex ) <h2 id="sub_title">
 >> id는  구분을 위해 쓰는것이라 중복되어선 안된다??
 >react 에선 잘 안쓰인다고 한다.

::<input type="number" min="0" max="3" value="1">::
: 입력할 숫자의 최소치/최대치를 설정할수 있다.(nin/max)
: submit 을통해 전송되는 값은 value값이다!
::<input type="range" min="0" max="3" value="1">::

달력...이 있긴 한데 잘안쓴데네?

:: 날짜 지정하기
<input type="date">
<input type="month">
<input type="week">

:: 시간 지정하기
<input type="time">
<input type="datetime-local">

:: 범위 제한하기 (min ~ max)
<input type="date" min="2020-02-01" max="2020-02-15">
<input type="time" min="14:00" max="16:00">


::<button></button>
: form태그 안에서만 작동함
: 버튼을 추가해주는 태그. 


::<input type="image" src="해당이미지url" alt="반드시 써줘야할 이미지.">::
<form>
 <fieldset>
    <label>아이디: <input type="text" id="user_id" size="10" min></label>
    <label>비밀번호: <input type="password" id="user_pw" size="10"></label>
    <input type="image" src="images/login.png" alt="로그인">
 </fieldset>
</form>

>> submit과 기능은 동일한데 이미지를 버튼으로 사용할수 있게 해주는 기능

::onclick:: 
: 태그내용을 클릭했을때 발생할수 있는 일 을 지정(새창에서 열기, 창열기, 파일열기 등등)

::<input type="file">::
: 파일 내용을 서버로 전송할수 있게 해주는 기능
: 사진 첨부 하거나 파일첨부 같은거 하는 페이지들 있지? 그런거

::<input type="hidden" value="서버로 넘겨주고 싶은 데이터">
: 서버에 전송이 필요한 정보 이지만, 사용자에겐 보여줄 필요가 없는 데이터에 사용.
: 로그인에 필요한건 ID/Password 뿐만이 아니라서 사용된다고 함
: 일반적인 사이트에서 hidden 태그 찾아보면 암호화 되있다드라

:: autofocus :: 
: input 창이 여러개가 있을때, 첫 포커싱을 잡아주는 태그

:: placeholder ::
: input 창에 설명이 필요할때 반투명하게 보이는 글자. 보통 사용자가 입력하면 안보임!

:: required ::
: 사용자가 반드시 입력해야 하는 부분. 
: 해당 입력란이 빈칸일 경우 submit 을 못하게 해주는 기능같은거

:: readonly ::
: 사용자가 '읽을수만' 있는 칸. 사용자는 수정할수 없고 개발자는 수정할수있겠지?

:: autocomplete="off" ::
: 자동완성기능 (off) 를 써서 켜고 끌수 있음.
: 로그인할때 자동완성을 막아줄수 있음
: (on) 으로 쓸 경우, 해당칸에 지금껏 비슷한 칸에 입력했던 정보들이 노출된다
: 기본값은 (on)이다.

:: <textarea></textarea> ::
<textarea id="memo" cols="40" rows="4"></textarea>
: 사용자가 텍스트를 입력할수 있는 공간
: cols= 열(가로길이), rows= 행(새로길이)
: cols와 rows는 문자 단위(보통은 영어) 
>>4줄 40칸 (한글은 그 절반, 줄은 4줄이지만..?)
>>글꼴이나 글 사이즈에 따라서 갯수가 달라질수도 있다.

:: <select></select> ::
: 선택상자 가 추가됨
: option 으로 보기를 주고 주관식으로 선택하게 만든다
: value 태그는 서버로 전송되는값이다.
: label 과 select의 id 값은 동일해야 합니다.
: <selected> 먼저 골라져있도록 설정할수 있다. 

:: <datalist></datalist> :: <특이한 아이
: select와 같이 option 값이 있다. 물론 value값도.
: input 태그와 연결해서 사용해야 한다. 

immit 에서 input만 입력해도 자동완성이 된다구?

:: button을 만드는 두가지 방법 :: 

<input type="button" value="버튼1">
<input type="submit>
<input type="reset" value="버튼2">


<button type="submit">버튼1</button>
<button type="reset">버튼2</button>

차이점 >>
: input 태그는 form태그 안에서만 사용할수 있다. 
: button 태그는 form태그 밖에서도 사용할수 있다.
: css로 꾸밀것까지 감안하면 button태그가 더 자주 사용된다??


:: http ::
: 유저 - 브라우저 - 서버 - 데이터베이스 간의 데이터 교류를 위한 통신규약(규정)????
: 전세계 공통. (한국어로는 안써지는 이유!)
:: http vs https ?
: https는 인증서가 첨부된 사이트.
: http는 인증서가 없는 사이트.

:: form태그를 쓰다보면 immit이 자꾸 붙여주는 action? ::
: form의 내용을 지정된 곳으로 넘겨줌!
: 나중에 또 나올거야?

jsp : java로 구현된 페이지


:: form태그의 친구? :: method ::
: 어떤식으로 데이터를 넘겨줄지??
: get 방식 vs post 방식

: get 방식
- 주소에 데이터를 실어서 서버로 보내는 방식
- 데이터가 주소에 노출된다. (오픈해도 되는것들은 그냥 get방식으로 보내버려도 된다.)
- 보안이 불필요하고, 보낼 데이터가 작은 경우에 사용.

: post 방식
- 주소에 써있는게 get 방식에 비해 적다.
- 입력한 정보를 서버로 숨겨서 보낸다.
- 반대의 경우겠지? 보안도 필요하고, 보내야할 데이터량도 많고...(대용량 데이터를 보낼수 있다!)

:: 쿼리스트링 (QueryString) ::
: 도메인 주소가 끝나고 ? 뒤에 있는 내용. 브라우저 > 서버로 전달되는 정보를 담고있음. 
: &:암 퍼센트 
: 암퍼센트로 정보를 끊어서 구분해서 보낸다? 

:: request :: :: response ::
- 브라우저와 서버간 소통하는 내용?
- request : 서버에 데이터를 요청
- response : 서버가 반응(응답) 하여 받은 데이터


