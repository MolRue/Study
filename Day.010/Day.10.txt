Day.10

For??

 - 반복문중 하나
 - 
  for (let i = 0; i < 5; i++) 
            { console.log(i); }

 - 초기값 i 는 0
 - i++로 i 는 점차적으로 증가
 - i 가 5회 반복 (반복횟수) 

 - 어따씀?
  > - 로도 쓸수있으나 멈추는 지점을 안정해주면 
    무한반복.... ( 컴퓨터 뻗는다 )
  > 초기값 역시 0일 필요는 없다.
  > (i+=2) 이런식으로 2씩 증가시킬수도 있다.

for in

  -  

for of

 - 배열의 '값'만 가져올수 있다.
     for (const todo of todos) 
    { console.log (`오늘의 할일은 ${todo}`) }


while
 - 조건식이 '참' 일 동안 반복실행

while ( i < 10 ) {
            alert(`${i}번째 반복입니다.`);
            i = i + 1; }


do while
 - 먼저 do 영역에 있는 코드를 실행
 - while 영역의 조건이 되기 전까지
 - 대체가능한 함수가 많아서 잘 안쓴다더라.
 
do {console.log(`${i}`)
    i++;
    } while (i < 10)

break
 - 반복문을 종료!
 - 동일 폼 내의 모든 작업이 종료된다.

continue
 - 아래에 있는 코드를 실행하지 않고 반복문으로 돌아간다.
 - for, while, do while 에서 쓰임


함수???

 - 수학에서 나오는 함수랑 비슷?
 - 기능을 처리할수 있는 태그? 

   // 함수를 정의
  function sum() {
  let sum = 1 + 2;
  console.log(sum);}
   // 함수를 실행
  sum();

 - 함수를 정의해두고, 정의된 함수를 실행만 하면 된다? 
 - a, b : 매개 변수 : 함수 안에 오는 변수


 함수를 정의하는 방법??

 1. function sum() 비익명 함수
 - function 으로 함수명을 지정할수 있다.

 2. const sum = function 익명함수
  - const, var, 등의 변수로 함수를 정의한다. 
  - 모양만 약간 다르지만 실행 결과는 동일하다.

 3. 화살표 함수(ES6)
  - const sum = (a, b) => 
  - ES6 버전 이후로 사용된다
  - function 이란 태그 대신 => 로 함수 정의
  - 화살표 함수에 한해서,, 매개변수가 1개일 경우, 괄호생략 가능.
  - const sum2 = a => { }

함수의 리턴???

 - 문자, 수식, 결과 등을 
 - return문 밑에 있는 코드는 return문을 지나는 순간 실행되지 않는다.
   (=함수가 끝난다.)

화살표 함수와 return문

 - 화살표 함수의 경우, 리턴만 해주면 중괄호, return문을 생략할 수 있다.

  const sum = (a, b) =>  a + b;
               
  var result = sum(1, 2);
  console.log(result);